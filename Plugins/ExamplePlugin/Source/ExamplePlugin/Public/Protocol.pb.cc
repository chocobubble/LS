// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR BaseRequest::BaseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.subtype_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct BaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseRequestDefaultTypeInternal() {}
  union {
    BaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
PROTOBUF_CONSTEXPR BaseResponse::BaseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apireturncode_)*/0
  , /*decltype(_impl_.subtype_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct BaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseResponseDefaultTypeInternal() {}
  union {
    BaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
PROTOBUF_CONSTEXPR LoginRequest::LoginRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
PROTOBUF_CONSTEXPR LoginResponse2::LoginResponse2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apireturncode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginResponse2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponse2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponse2DefaultTypeInternal() {}
  union {
    LoginResponse2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponse2DefaultTypeInternal _LoginResponse2_default_instance_;
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateAccountRequest::CreateAccountRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateAccountRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateAccountRequestDefaultTypeInternal() {}
  union {
    CreateAccountRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateAccountRequestDefaultTypeInternal _CreateAccountRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateAccountResponse::CreateAccountResponse(
    ::_pbi::ConstantInitialized) {}
struct CreateAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateAccountResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateAccountResponseDefaultTypeInternal() {}
  union {
    CreateAccountResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateAccountResponseDefaultTypeInternal _CreateAccountResponse_default_instance_;
PROTOBUF_CONSTEXPR CharacterData::CharacterData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.weaponsavedata_)*/nullptr
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.exp_)*/0
  , /*decltype(_impl_.gold_)*/0
  , /*decltype(_impl_.rifleammo_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataDefaultTypeInternal() {}
  union {
    CharacterData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataDefaultTypeInternal _CharacterData_default_instance_;
PROTOBUF_CONSTEXPR WeaponSaveData::WeaponSaveData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.weapontype_)*/0
  , /*decltype(_impl_.weaponlevel_)*/0
  , /*decltype(_impl_.weaponenhancementlevel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WeaponSaveDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponSaveDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponSaveDataDefaultTypeInternal() {}
  union {
    WeaponSaveData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponSaveDataDefaultTypeInternal _WeaponSaveData_default_instance_;
PROTOBUF_CONSTEXPR CharacterDataLoadRequest::CharacterDataLoadRequest(
    ::_pbi::ConstantInitialized) {}
struct CharacterDataLoadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataLoadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataLoadRequestDefaultTypeInternal() {}
  union {
    CharacterDataLoadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataLoadRequestDefaultTypeInternal _CharacterDataLoadRequest_default_instance_;
PROTOBUF_CONSTEXPR CharacterDataLoadResponse2::CharacterDataLoadResponse2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.characterdata_)*/nullptr
  , /*decltype(_impl_.apireturncode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterDataLoadResponse2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataLoadResponse2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataLoadResponse2DefaultTypeInternal() {}
  union {
    CharacterDataLoadResponse2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataLoadResponse2DefaultTypeInternal _CharacterDataLoadResponse2_default_instance_;
PROTOBUF_CONSTEXPR CharacterDataLoadResponse::CharacterDataLoadResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.characterdata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterDataLoadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataLoadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataLoadResponseDefaultTypeInternal() {}
  union {
    CharacterDataLoadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataLoadResponseDefaultTypeInternal _CharacterDataLoadResponse_default_instance_;
PROTOBUF_CONSTEXPR CharacterDataSaveRequest::CharacterDataSaveRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.characterdata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterDataSaveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataSaveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataSaveRequestDefaultTypeInternal() {}
  union {
    CharacterDataSaveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataSaveRequestDefaultTypeInternal _CharacterDataSaveRequest_default_instance_;
PROTOBUF_CONSTEXPR CharacterDataSaveResponse::CharacterDataSaveResponse(
    ::_pbi::ConstantInitialized) {}
struct CharacterDataSaveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDataSaveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDataSaveResponseDefaultTypeInternal() {}
  union {
    CharacterDataSaveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDataSaveResponseDefaultTypeInternal _CharacterDataSaveResponse_default_instance_;
PROTOBUF_CONSTEXPR LogoutRequest::LogoutRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogoutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogoutRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogoutRequestDefaultTypeInternal() {}
  union {
    LogoutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;
PROTOBUF_CONSTEXPR LogoutResponse::LogoutResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apireturncode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogoutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogoutResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogoutResponseDefaultTypeInternal() {}
  union {
    LogoutResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogoutResponseDefaultTypeInternal _LogoutResponse_default_instance_;
PROTOBUF_CONSTEXPR RefreshSessionRequest::RefreshSessionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSessionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSessionRequestDefaultTypeInternal() {}
  union {
    RefreshSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSessionRequestDefaultTypeInternal _RefreshSessionRequest_default_instance_;
PROTOBUF_CONSTEXPR RefreshSessionResponse::RefreshSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apireturncode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSessionResponseDefaultTypeInternal() {}
  union {
    RefreshSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSessionResponseDefaultTypeInternal _RefreshSessionResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_Protocol_2eproto[18];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Protocol_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const uint32_t TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::BaseRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::BaseRequest, _impl_.sessionid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::BaseRequest, _impl_.subtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::BaseResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::BaseResponse, _impl_.apireturncode_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::BaseResponse, _impl_.subtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::LoginRequest, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginResponse2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginResponse2, _impl_.apireturncode_),
  PROTOBUF_FIELD_OFFSET(::LoginResponse2, _impl_.sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginResponse, _impl_.sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CreateAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CreateAccountRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::CreateAccountRequest, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CreateAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.playername_),
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.gold_),
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.weaponsavedata_),
  PROTOBUF_FIELD_OFFSET(::CharacterData, _impl_.rifleammo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WeaponSaveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::WeaponSaveData, _impl_.weapontype_),
  PROTOBUF_FIELD_OFFSET(::WeaponSaveData, _impl_.weaponlevel_),
  PROTOBUF_FIELD_OFFSET(::WeaponSaveData, _impl_.weaponenhancementlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadResponse2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadResponse2, _impl_.apireturncode_),
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadResponse2, _impl_.characterdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CharacterDataLoadResponse, _impl_.characterdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterDataSaveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CharacterDataSaveRequest, _impl_.characterdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharacterDataSaveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LogoutRequest, _impl_.sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LogoutResponse, _impl_.apireturncode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RefreshSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RefreshSessionRequest, _impl_.sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RefreshSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RefreshSessionResponse, _impl_.apireturncode_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::BaseRequest)},
  { 12, -1, -1, sizeof(::BaseResponse)},
  { 24, -1, -1, sizeof(::LoginRequest)},
  { 32, -1, -1, sizeof(::LoginResponse2)},
  { 40, -1, -1, sizeof(::LoginResponse)},
  { 47, -1, -1, sizeof(::CreateAccountRequest)},
  { 55, -1, -1, sizeof(::CreateAccountResponse)},
  { 61, -1, -1, sizeof(::CharacterData)},
  { 73, -1, -1, sizeof(::WeaponSaveData)},
  { 82, -1, -1, sizeof(::CharacterDataLoadRequest)},
  { 88, -1, -1, sizeof(::CharacterDataLoadResponse2)},
  { 96, -1, -1, sizeof(::CharacterDataLoadResponse)},
  { 103, -1, -1, sizeof(::CharacterDataSaveRequest)},
  { 110, -1, -1, sizeof(::CharacterDataSaveResponse)},
  { 116, -1, -1, sizeof(::LogoutRequest)},
  { 123, -1, -1, sizeof(::LogoutResponse)},
  { 130, -1, -1, sizeof(::RefreshSessionRequest)},
  { 137, -1, -1, sizeof(::RefreshSessionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_BaseRequest_default_instance_._instance,
  &::_BaseResponse_default_instance_._instance,
  &::_LoginRequest_default_instance_._instance,
  &::_LoginResponse2_default_instance_._instance,
  &::_LoginResponse_default_instance_._instance,
  &::_CreateAccountRequest_default_instance_._instance,
  &::_CreateAccountResponse_default_instance_._instance,
  &::_CharacterData_default_instance_._instance,
  &::_WeaponSaveData_default_instance_._instance,
  &::_CharacterDataLoadRequest_default_instance_._instance,
  &::_CharacterDataLoadResponse2_default_instance_._instance,
  &::_CharacterDataLoadResponse_default_instance_._instance,
  &::_CharacterDataSaveRequest_default_instance_._instance,
  &::_CharacterDataSaveResponse_default_instance_._instance,
  &::_LogoutRequest_default_instance_._instance,
  &::_LogoutResponse_default_instance_._instance,
  &::_RefreshSessionRequest_default_instance_._instance,
  &::_RefreshSessionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\"\207\002\n\013BaseRequest\022\021\n\tsess"
  "ionId\030\001 \001(\t\0225\n\024CreateAccountRequest\030\014 \001("
  "\0132\025.CreateAccountRequestH\000\022=\n\030CharacterD"
  "ataLoadRequest\030\r \001(\0132\031.CharacterDataLoad"
  "RequestH\000\022=\n\030CharacterDataSaveRequest\030\016 "
  "\001(\0132\031.CharacterDataSaveRequestH\000\022%\n\014Logi"
  "nRequest\030\017 \001(\0132\r.LoginRequestH\000B\t\n\007subty"
  "pe\"\244\002\n\014BaseResponse\022%\n\rapiReturnCode\030\001 \001"
  "(\0162\016.ApiReturnCode\0227\n\025CreateAccountRespo"
  "nse\030\026 \001(\0132\026.CreateAccountResponseH\000\022\?\n\031C"
  "haracterDataLoadResponse\030\027 \001(\0132\032.Charact"
  "erDataLoadResponseH\000\022\?\n\031CharacterDataSav"
  "eResponse\030\030 \001(\0132\032.CharacterDataSaveRespo"
  "nseH\000\022\'\n\rLoginResponse\030\031 \001(\0132\016.LoginResp"
  "onseH\000B\t\n\007subtype\",\n\014LoginRequest\022\n\n\002id\030"
  "\001 \001(\t\022\020\n\010password\030\002 \001(\t\"J\n\016LoginResponse"
  "2\022%\n\rapiReturnCode\030\001 \001(\0162\016.ApiReturnCode"
  "\022\021\n\tsessionId\030\002 \001(\t\"\"\n\rLoginResponse\022\021\n\t"
  "sessionId\030\001 \001(\t\"4\n\024CreateAccountRequest\022"
  "\n\n\002id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\027\n\025CreateA"
  "ccountResponse\"\211\001\n\rCharacterData\022\r\n\005leve"
  "l\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\022\n\nplayerName\030\003 \001(\t"
  "\022\014\n\004gold\030\004 \001(\005\022\'\n\016weaponSaveData\030\005 \001(\0132\017"
  ".WeaponSaveData\022\021\n\trifleAmmo\030\006 \001(\005\"f\n\016We"
  "aponSaveData\022\037\n\nweaponType\030\001 \001(\0162\013.Weapo"
  "nType\022\023\n\013weaponLevel\030\002 \001(\005\022\036\n\026weaponEnha"
  "ncementLevel\030\003 \001(\005\"\032\n\030CharacterDataLoadR"
  "equest\"j\n\032CharacterDataLoadResponse2\022%\n\r"
  "apiReturnCode\030\001 \001(\0162\016.ApiReturnCode\022%\n\rc"
  "haracterData\030\002 \001(\0132\016.CharacterData\"B\n\031Ch"
  "aracterDataLoadResponse\022%\n\rcharacterData"
  "\030\001 \001(\0132\016.CharacterData\"A\n\030CharacterDataS"
  "aveRequest\022%\n\rcharacterData\030\001 \001(\0132\016.Char"
  "acterData\"\033\n\031CharacterDataSaveResponse\"\""
  "\n\rLogoutRequest\022\021\n\tsessionId\030\001 \001(\t\"7\n\016Lo"
  "goutResponse\022%\n\rapiReturnCode\030\001 \001(\0162\016.Ap"
  "iReturnCode\"*\n\025RefreshSessionRequest\022\021\n\t"
  "sessionId\030\001 \001(\t\"\?\n\026RefreshSessionRespons"
  "e\022%\n\rapiReturnCode\030\001 \001(\0162\016.ApiReturnCode"
  "*\207\001\n\rApiReturnCode\022\010\n\004None\020\000\022\013\n\007Success\020"
  "\001\022\010\n\004Fail\020\002\022\024\n\020UnknownSessionId\020\003\022\021\n\rInv"
  "alidUserId\020\004\022\027\n\023InvalidUserPassword\020\005\022\023\n"
  "\017DuplicatedLogin\020\006*M\n\nWeaponType\022\017\n\013EWT_"
  "DEFAULT\020\000\022\r\n\tEWT_RIFLE\020\001\022\016\n\nEWT_PISTOL\020\002"
  "\022\017\n\013EWT_SHOTGUN\020\003b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false, false, 1785, descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once, nullptr, 0, 18,
    schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
    file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApiReturnCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[0];
}
bool ApiReturnCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WeaponType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[1];
}
bool WeaponType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class BaseRequest::_Internal {
 public:
  static const ::CreateAccountRequest& createaccountrequest(const BaseRequest* msg);
  static const ::CharacterDataLoadRequest& characterdataloadrequest(const BaseRequest* msg);
  static const ::CharacterDataSaveRequest& characterdatasaverequest(const BaseRequest* msg);
  static const ::LoginRequest& loginrequest(const BaseRequest* msg);
};

const ::CreateAccountRequest&
BaseRequest::_Internal::createaccountrequest(const BaseRequest* msg) {
  return *msg->_impl_.subtype_.createaccountrequest_;
}
const ::CharacterDataLoadRequest&
BaseRequest::_Internal::characterdataloadrequest(const BaseRequest* msg) {
  return *msg->_impl_.subtype_.characterdataloadrequest_;
}
const ::CharacterDataSaveRequest&
BaseRequest::_Internal::characterdatasaverequest(const BaseRequest* msg) {
  return *msg->_impl_.subtype_.characterdatasaverequest_;
}
const ::LoginRequest&
BaseRequest::_Internal::loginrequest(const BaseRequest* msg) {
  return *msg->_impl_.subtype_.loginrequest_;
}
void BaseRequest::set_allocated_createaccountrequest(::CreateAccountRequest* createaccountrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (createaccountrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(createaccountrequest);
    if (message_arena != submessage_arena) {
      createaccountrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, createaccountrequest, submessage_arena);
    }
    set_has_createaccountrequest();
    _impl_.subtype_.createaccountrequest_ = createaccountrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseRequest.CreateAccountRequest)
}
void BaseRequest::set_allocated_characterdataloadrequest(::CharacterDataLoadRequest* characterdataloadrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (characterdataloadrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(characterdataloadrequest);
    if (message_arena != submessage_arena) {
      characterdataloadrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characterdataloadrequest, submessage_arena);
    }
    set_has_characterdataloadrequest();
    _impl_.subtype_.characterdataloadrequest_ = characterdataloadrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseRequest.CharacterDataLoadRequest)
}
void BaseRequest::set_allocated_characterdatasaverequest(::CharacterDataSaveRequest* characterdatasaverequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (characterdatasaverequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(characterdatasaverequest);
    if (message_arena != submessage_arena) {
      characterdatasaverequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characterdatasaverequest, submessage_arena);
    }
    set_has_characterdatasaverequest();
    _impl_.subtype_.characterdatasaverequest_ = characterdatasaverequest;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseRequest.CharacterDataSaveRequest)
}
void BaseRequest::set_allocated_loginrequest(::LoginRequest* loginrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (loginrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(loginrequest);
    if (message_arena != submessage_arena) {
      loginrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loginrequest, submessage_arena);
    }
    set_has_loginrequest();
    _impl_.subtype_.loginrequest_ = loginrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseRequest.LoginRequest)
}
BaseRequest::BaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:BaseRequest)
}
BaseRequest::BaseRequest(const BaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , decltype(_impl_.subtype_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    _this->_impl_.sessionid_.Set(from._internal_sessionid(), 
      _this->GetArenaForAllocation());
  }
  clear_has_subtype();
  switch (from.subtype_case()) {
    case kCreateAccountRequest: {
      _this->_internal_mutable_createaccountrequest()->::CreateAccountRequest::MergeFrom(
          from._internal_createaccountrequest());
      break;
    }
    case kCharacterDataLoadRequest: {
      _this->_internal_mutable_characterdataloadrequest()->::CharacterDataLoadRequest::MergeFrom(
          from._internal_characterdataloadrequest());
      break;
    }
    case kCharacterDataSaveRequest: {
      _this->_internal_mutable_characterdatasaverequest()->::CharacterDataSaveRequest::MergeFrom(
          from._internal_characterdatasaverequest());
      break;
    }
    case kLoginRequest: {
      _this->_internal_mutable_loginrequest()->::LoginRequest::MergeFrom(
          from._internal_loginrequest());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BaseRequest)
}

inline void BaseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , decltype(_impl_.subtype_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_subtype();
}

BaseRequest::~BaseRequest() {
  // @@protoc_insertion_point(destructor:BaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessionid_.Destroy();
  if (has_subtype()) {
    clear_subtype();
  }
}

void BaseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseRequest::clear_subtype() {
// @@protoc_insertion_point(one_of_clear_start:BaseRequest)
  switch (subtype_case()) {
    case kCreateAccountRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.createaccountrequest_;
      }
      break;
    }
    case kCharacterDataLoadRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.characterdataloadrequest_;
      }
      break;
    }
    case kCharacterDataSaveRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.characterdatasaverequest_;
      }
      break;
    }
    case kLoginRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.loginrequest_;
      }
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SUBTYPE_NOT_SET;
}


void BaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  clear_subtype();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "BaseRequest.sessionId"));
        } else
          goto handle_unusual;
        continue;
      // .CreateAccountRequest CreateAccountRequest = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_createaccountrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CharacterDataLoadRequest CharacterDataLoadRequest = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdataloadrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CharacterDataSaveRequest CharacterDataSaveRequest = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdatasaverequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginRequest LoginRequest = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_loginrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BaseRequest.sessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sessionid(), target);
  }

  // .CreateAccountRequest CreateAccountRequest = 12;
  if (_internal_has_createaccountrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::createaccountrequest(this),
        _Internal::createaccountrequest(this).GetCachedSize(), target, stream);
  }

  // .CharacterDataLoadRequest CharacterDataLoadRequest = 13;
  if (_internal_has_characterdataloadrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::characterdataloadrequest(this),
        _Internal::characterdataloadrequest(this).GetCachedSize(), target, stream);
  }

  // .CharacterDataSaveRequest CharacterDataSaveRequest = 14;
  if (_internal_has_characterdatasaverequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::characterdatasaverequest(this),
        _Internal::characterdatasaverequest(this).GetCachedSize(), target, stream);
  }

  // .LoginRequest LoginRequest = 15;
  if (_internal_has_loginrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::loginrequest(this),
        _Internal::loginrequest(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseRequest)
  return target;
}

size_t BaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  switch (subtype_case()) {
    // .CreateAccountRequest CreateAccountRequest = 12;
    case kCreateAccountRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.createaccountrequest_);
      break;
    }
    // .CharacterDataLoadRequest CharacterDataLoadRequest = 13;
    case kCharacterDataLoadRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.characterdataloadrequest_);
      break;
    }
    // .CharacterDataSaveRequest CharacterDataSaveRequest = 14;
    case kCharacterDataSaveRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.characterdatasaverequest_);
      break;
    }
    // .LoginRequest LoginRequest = 15;
    case kLoginRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.loginrequest_);
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseRequest::GetClassData() const { return &_class_data_; }


void BaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseRequest*>(&to_msg);
  auto& from = static_cast<const BaseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BaseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  switch (from.subtype_case()) {
    case kCreateAccountRequest: {
      _this->_internal_mutable_createaccountrequest()->::CreateAccountRequest::MergeFrom(
          from._internal_createaccountrequest());
      break;
    }
    case kCharacterDataLoadRequest: {
      _this->_internal_mutable_characterdataloadrequest()->::CharacterDataLoadRequest::MergeFrom(
          from._internal_characterdataloadrequest());
      break;
    }
    case kCharacterDataSaveRequest: {
      _this->_internal_mutable_characterdatasaverequest()->::CharacterDataSaveRequest::MergeFrom(
          from._internal_characterdatasaverequest());
      break;
    }
    case kLoginRequest: {
      _this->_internal_mutable_loginrequest()->::LoginRequest::MergeFrom(
          from._internal_loginrequest());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseRequest::CopyFrom(const BaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseRequest::IsInitialized() const {
  return true;
}

void BaseRequest::InternalSwap(BaseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sessionid_, lhs_arena,
      &other->_impl_.sessionid_, rhs_arena
  );
  swap(_impl_.subtype_, other->_impl_.subtype_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class BaseResponse::_Internal {
 public:
  static const ::CreateAccountResponse& createaccountresponse(const BaseResponse* msg);
  static const ::CharacterDataLoadResponse& characterdataloadresponse(const BaseResponse* msg);
  static const ::CharacterDataSaveResponse& characterdatasaveresponse(const BaseResponse* msg);
  static const ::LoginResponse& loginresponse(const BaseResponse* msg);
};

const ::CreateAccountResponse&
BaseResponse::_Internal::createaccountresponse(const BaseResponse* msg) {
  return *msg->_impl_.subtype_.createaccountresponse_;
}
const ::CharacterDataLoadResponse&
BaseResponse::_Internal::characterdataloadresponse(const BaseResponse* msg) {
  return *msg->_impl_.subtype_.characterdataloadresponse_;
}
const ::CharacterDataSaveResponse&
BaseResponse::_Internal::characterdatasaveresponse(const BaseResponse* msg) {
  return *msg->_impl_.subtype_.characterdatasaveresponse_;
}
const ::LoginResponse&
BaseResponse::_Internal::loginresponse(const BaseResponse* msg) {
  return *msg->_impl_.subtype_.loginresponse_;
}
void BaseResponse::set_allocated_createaccountresponse(::CreateAccountResponse* createaccountresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (createaccountresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(createaccountresponse);
    if (message_arena != submessage_arena) {
      createaccountresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, createaccountresponse, submessage_arena);
    }
    set_has_createaccountresponse();
    _impl_.subtype_.createaccountresponse_ = createaccountresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseResponse.CreateAccountResponse)
}
void BaseResponse::set_allocated_characterdataloadresponse(::CharacterDataLoadResponse* characterdataloadresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (characterdataloadresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(characterdataloadresponse);
    if (message_arena != submessage_arena) {
      characterdataloadresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characterdataloadresponse, submessage_arena);
    }
    set_has_characterdataloadresponse();
    _impl_.subtype_.characterdataloadresponse_ = characterdataloadresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseResponse.CharacterDataLoadResponse)
}
void BaseResponse::set_allocated_characterdatasaveresponse(::CharacterDataSaveResponse* characterdatasaveresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (characterdatasaveresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(characterdatasaveresponse);
    if (message_arena != submessage_arena) {
      characterdatasaveresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characterdatasaveresponse, submessage_arena);
    }
    set_has_characterdatasaveresponse();
    _impl_.subtype_.characterdatasaveresponse_ = characterdatasaveresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseResponse.CharacterDataSaveResponse)
}
void BaseResponse::set_allocated_loginresponse(::LoginResponse* loginresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_subtype();
  if (loginresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(loginresponse);
    if (message_arena != submessage_arena) {
      loginresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loginresponse, submessage_arena);
    }
    set_has_loginresponse();
    _impl_.subtype_.loginresponse_ = loginresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:BaseResponse.LoginResponse)
}
BaseResponse::BaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:BaseResponse)
}
BaseResponse::BaseResponse(const BaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){}
    , decltype(_impl_.subtype_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.apireturncode_ = from._impl_.apireturncode_;
  clear_has_subtype();
  switch (from.subtype_case()) {
    case kCreateAccountResponse: {
      _this->_internal_mutable_createaccountresponse()->::CreateAccountResponse::MergeFrom(
          from._internal_createaccountresponse());
      break;
    }
    case kCharacterDataLoadResponse: {
      _this->_internal_mutable_characterdataloadresponse()->::CharacterDataLoadResponse::MergeFrom(
          from._internal_characterdataloadresponse());
      break;
    }
    case kCharacterDataSaveResponse: {
      _this->_internal_mutable_characterdatasaveresponse()->::CharacterDataSaveResponse::MergeFrom(
          from._internal_characterdatasaveresponse());
      break;
    }
    case kLoginResponse: {
      _this->_internal_mutable_loginresponse()->::LoginResponse::MergeFrom(
          from._internal_loginresponse());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BaseResponse)
}

inline void BaseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){0}
    , decltype(_impl_.subtype_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_subtype();
}

BaseResponse::~BaseResponse() {
  // @@protoc_insertion_point(destructor:BaseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_subtype()) {
    clear_subtype();
  }
}

void BaseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseResponse::clear_subtype() {
// @@protoc_insertion_point(one_of_clear_start:BaseResponse)
  switch (subtype_case()) {
    case kCreateAccountResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.createaccountresponse_;
      }
      break;
    }
    case kCharacterDataLoadResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.characterdataloadresponse_;
      }
      break;
    }
    case kCharacterDataSaveResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.characterdatasaveresponse_;
      }
      break;
    }
    case kLoginResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.subtype_.loginresponse_;
      }
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SUBTYPE_NOT_SET;
}


void BaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apireturncode_ = 0;
  clear_subtype();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ApiReturnCode apiReturnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_apireturncode(static_cast<::ApiReturnCode>(val));
        } else
          goto handle_unusual;
        continue;
      // .CreateAccountResponse CreateAccountResponse = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_createaccountresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CharacterDataLoadResponse CharacterDataLoadResponse = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdataloadresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CharacterDataSaveResponse CharacterDataSaveResponse = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdatasaveresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginResponse LoginResponse = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_loginresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BaseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_apireturncode(), target);
  }

  // .CreateAccountResponse CreateAccountResponse = 22;
  if (_internal_has_createaccountresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::createaccountresponse(this),
        _Internal::createaccountresponse(this).GetCachedSize(), target, stream);
  }

  // .CharacterDataLoadResponse CharacterDataLoadResponse = 23;
  if (_internal_has_characterdataloadresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::characterdataloadresponse(this),
        _Internal::characterdataloadresponse(this).GetCachedSize(), target, stream);
  }

  // .CharacterDataSaveResponse CharacterDataSaveResponse = 24;
  if (_internal_has_characterdatasaveresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::characterdatasaveresponse(this),
        _Internal::characterdatasaveresponse(this).GetCachedSize(), target, stream);
  }

  // .LoginResponse LoginResponse = 25;
  if (_internal_has_loginresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::loginresponse(this),
        _Internal::loginresponse(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseResponse)
  return target;
}

size_t BaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_apireturncode());
  }

  switch (subtype_case()) {
    // .CreateAccountResponse CreateAccountResponse = 22;
    case kCreateAccountResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.createaccountresponse_);
      break;
    }
    // .CharacterDataLoadResponse CharacterDataLoadResponse = 23;
    case kCharacterDataLoadResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.characterdataloadresponse_);
      break;
    }
    // .CharacterDataSaveResponse CharacterDataSaveResponse = 24;
    case kCharacterDataSaveResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.characterdatasaveresponse_);
      break;
    }
    // .LoginResponse LoginResponse = 25;
    case kLoginResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.subtype_.loginresponse_);
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseResponse::GetClassData() const { return &_class_data_; }


void BaseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseResponse*>(&to_msg);
  auto& from = static_cast<const BaseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BaseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apireturncode() != 0) {
    _this->_internal_set_apireturncode(from._internal_apireturncode());
  }
  switch (from.subtype_case()) {
    case kCreateAccountResponse: {
      _this->_internal_mutable_createaccountresponse()->::CreateAccountResponse::MergeFrom(
          from._internal_createaccountresponse());
      break;
    }
    case kCharacterDataLoadResponse: {
      _this->_internal_mutable_characterdataloadresponse()->::CharacterDataLoadResponse::MergeFrom(
          from._internal_characterdataloadresponse());
      break;
    }
    case kCharacterDataSaveResponse: {
      _this->_internal_mutable_characterdatasaveresponse()->::CharacterDataSaveResponse::MergeFrom(
          from._internal_characterdatasaveresponse());
      break;
    }
    case kLoginResponse: {
      _this->_internal_mutable_loginresponse()->::LoginResponse::MergeFrom(
          from._internal_loginresponse());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseResponse::CopyFrom(const BaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseResponse::IsInitialized() const {
  return true;
}

void BaseResponse::InternalSwap(BaseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.apireturncode_, other->_impl_.apireturncode_);
  swap(_impl_.subtype_, other->_impl_.subtype_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginRequest)
}

inline void LoginRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:LoginRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.password_.Destroy();
}

void LoginRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "LoginRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "LoginRequest.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginRequest::GetClassData() const { return &_class_data_; }


void LoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginRequest*>(&to_msg);
  auto& from = static_cast<const LoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class LoginResponse2::_Internal {
 public:
};

LoginResponse2::LoginResponse2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginResponse2)
}
LoginResponse2::LoginResponse2(const LoginResponse2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginResponse2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , decltype(_impl_.apireturncode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    _this->_impl_.sessionid_.Set(from._internal_sessionid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.apireturncode_ = from._impl_.apireturncode_;
  // @@protoc_insertion_point(copy_constructor:LoginResponse2)
}

inline void LoginResponse2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , decltype(_impl_.apireturncode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginResponse2::~LoginResponse2() {
  // @@protoc_insertion_point(destructor:LoginResponse2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginResponse2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessionid_.Destroy();
}

void LoginResponse2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginResponse2::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginResponse2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _impl_.apireturncode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ApiReturnCode apiReturnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_apireturncode(static_cast<::ApiReturnCode>(val));
        } else
          goto handle_unusual;
        continue;
      // string sessionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "LoginResponse2.sessionId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginResponse2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginResponse2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_apireturncode(), target);
  }

  // string sessionId = 2;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoginResponse2.sessionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginResponse2)
  return target;
}

size_t LoginResponse2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginResponse2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 2;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_apireturncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginResponse2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginResponse2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginResponse2::GetClassData() const { return &_class_data_; }


void LoginResponse2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginResponse2*>(&to_msg);
  auto& from = static_cast<const LoginResponse2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginResponse2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_apireturncode() != 0) {
    _this->_internal_set_apireturncode(from._internal_apireturncode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResponse2::CopyFrom(const LoginResponse2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginResponse2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse2::IsInitialized() const {
  return true;
}

void LoginResponse2::InternalSwap(LoginResponse2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sessionid_, lhs_arena,
      &other->_impl_.sessionid_, rhs_arena
  );
  swap(_impl_.apireturncode_, other->_impl_.apireturncode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// ===================================================================

class LoginResponse::_Internal {
 public:
};

LoginResponse::LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    _this->_impl_.sessionid_.Set(from._internal_sessionid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginResponse)
}

inline void LoginResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:LoginResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessionid_.Destroy();
}

void LoginResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "LoginResponse.sessionId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoginResponse.sessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginResponse::GetClassData() const { return &_class_data_; }


void LoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginResponse*>(&to_msg);
  auto& from = static_cast<const LoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sessionid_, lhs_arena,
      &other->_impl_.sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[4]);
}

// ===================================================================

class CreateAccountRequest::_Internal {
 public:
};

CreateAccountRequest::CreateAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CreateAccountRequest)
}
CreateAccountRequest::CreateAccountRequest(const CreateAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateAccountRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CreateAccountRequest)
}

inline void CreateAccountRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateAccountRequest::~CreateAccountRequest() {
  // @@protoc_insertion_point(destructor:CreateAccountRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateAccountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.password_.Destroy();
}

void CreateAccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateAccountRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateAccountRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CreateAccountRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CreateAccountRequest.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateAccountRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateAccountRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CreateAccountRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CreateAccountRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateAccountRequest)
  return target;
}

size_t CreateAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateAccountRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateAccountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateAccountRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateAccountRequest::GetClassData() const { return &_class_data_; }


void CreateAccountRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateAccountRequest*>(&to_msg);
  auto& from = static_cast<const CreateAccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateAccountRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateAccountRequest::CopyFrom(const CreateAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountRequest::IsInitialized() const {
  return true;
}

void CreateAccountRequest::InternalSwap(CreateAccountRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[5]);
}

// ===================================================================

class CreateAccountResponse::_Internal {
 public:
};

CreateAccountResponse::CreateAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CreateAccountResponse)
}
CreateAccountResponse::CreateAccountResponse(const CreateAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CreateAccountResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CreateAccountResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateAccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateAccountResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreateAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[6]);
}

// ===================================================================

class CharacterData::_Internal {
 public:
  static const ::WeaponSaveData& weaponsavedata(const CharacterData* msg);
};

const ::WeaponSaveData&
CharacterData::_Internal::weaponsavedata(const CharacterData* msg) {
  return *msg->_impl_.weaponsavedata_;
}
CharacterData::CharacterData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CharacterData)
}
CharacterData::CharacterData(const CharacterData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.weaponsavedata_){nullptr}
    , decltype(_impl_.level_){}
    , decltype(_impl_.exp_){}
    , decltype(_impl_.gold_){}
    , decltype(_impl_.rifleammo_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_playername().empty()) {
    _this->_impl_.playername_.Set(from._internal_playername(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_weaponsavedata()) {
    _this->_impl_.weaponsavedata_ = new ::WeaponSaveData(*from._impl_.weaponsavedata_);
  }
  ::memcpy(&_impl_.level_, &from._impl_.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rifleammo_) -
    reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.rifleammo_));
  // @@protoc_insertion_point(copy_constructor:CharacterData)
}

inline void CharacterData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.weaponsavedata_){nullptr}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.exp_){0}
    , decltype(_impl_.gold_){0}
    , decltype(_impl_.rifleammo_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CharacterData::~CharacterData() {
  // @@protoc_insertion_point(destructor:CharacterData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playername_.Destroy();
  if (this != internal_default_instance()) delete _impl_.weaponsavedata_;
}

void CharacterData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterData::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacterData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playername_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.weaponsavedata_ != nullptr) {
    delete _impl_.weaponsavedata_;
  }
  _impl_.weaponsavedata_ = nullptr;
  ::memset(&_impl_.level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.rifleammo_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.rifleammo_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 exp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string playerName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_playername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CharacterData.playerName"));
        } else
          goto handle_unusual;
        continue;
      // int32 gold = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .WeaponSaveData weaponSaveData = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_weaponsavedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 rifleAmmo = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.rifleammo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CharacterData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int32 exp = 2;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_exp(), target);
  }

  // string playerName = 3;
  if (!this->_internal_playername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_playername().data(), static_cast<int>(this->_internal_playername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CharacterData.playerName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_playername(), target);
  }

  // int32 gold = 4;
  if (this->_internal_gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_gold(), target);
  }

  // .WeaponSaveData weaponSaveData = 5;
  if (this->_internal_has_weaponsavedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::weaponsavedata(this),
        _Internal::weaponsavedata(this).GetCachedSize(), target, stream);
  }

  // int32 rifleAmmo = 6;
  if (this->_internal_rifleammo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_rifleammo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacterData)
  return target;
}

size_t CharacterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacterData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string playerName = 3;
  if (!this->_internal_playername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_playername());
  }

  // .WeaponSaveData weaponSaveData = 5;
  if (this->_internal_has_weaponsavedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.weaponsavedata_);
  }

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 exp = 2;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_exp());
  }

  // int32 gold = 4;
  if (this->_internal_gold() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_gold());
  }

  // int32 rifleAmmo = 6;
  if (this->_internal_rifleammo() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_rifleammo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterData::GetClassData() const { return &_class_data_; }


void CharacterData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterData*>(&to_msg);
  auto& from = static_cast<const CharacterData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CharacterData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_playername().empty()) {
    _this->_internal_set_playername(from._internal_playername());
  }
  if (from._internal_has_weaponsavedata()) {
    _this->_internal_mutable_weaponsavedata()->::WeaponSaveData::MergeFrom(
        from._internal_weaponsavedata());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_gold() != 0) {
    _this->_internal_set_gold(from._internal_gold());
  }
  if (from._internal_rifleammo() != 0) {
    _this->_internal_set_rifleammo(from._internal_rifleammo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterData::CopyFrom(const CharacterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterData::IsInitialized() const {
  return true;
}

void CharacterData::InternalSwap(CharacterData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.playername_, lhs_arena,
      &other->_impl_.playername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterData, _impl_.rifleammo_)
      + sizeof(CharacterData::_impl_.rifleammo_)
      - PROTOBUF_FIELD_OFFSET(CharacterData, _impl_.weaponsavedata_)>(
          reinterpret_cast<char*>(&_impl_.weaponsavedata_),
          reinterpret_cast<char*>(&other->_impl_.weaponsavedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[7]);
}

// ===================================================================

class WeaponSaveData::_Internal {
 public:
};

WeaponSaveData::WeaponSaveData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:WeaponSaveData)
}
WeaponSaveData::WeaponSaveData(const WeaponSaveData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WeaponSaveData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.weapontype_){}
    , decltype(_impl_.weaponlevel_){}
    , decltype(_impl_.weaponenhancementlevel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.weapontype_, &from._impl_.weapontype_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.weaponenhancementlevel_) -
    reinterpret_cast<char*>(&_impl_.weapontype_)) + sizeof(_impl_.weaponenhancementlevel_));
  // @@protoc_insertion_point(copy_constructor:WeaponSaveData)
}

inline void WeaponSaveData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.weapontype_){0}
    , decltype(_impl_.weaponlevel_){0}
    , decltype(_impl_.weaponenhancementlevel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WeaponSaveData::~WeaponSaveData() {
  // @@protoc_insertion_point(destructor:WeaponSaveData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WeaponSaveData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WeaponSaveData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WeaponSaveData::Clear() {
// @@protoc_insertion_point(message_clear_start:WeaponSaveData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.weapontype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.weaponenhancementlevel_) -
      reinterpret_cast<char*>(&_impl_.weapontype_)) + sizeof(_impl_.weaponenhancementlevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WeaponSaveData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .WeaponType weaponType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_weapontype(static_cast<::WeaponType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 weaponLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.weaponlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 weaponEnhancementLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.weaponenhancementlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WeaponSaveData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WeaponSaveData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .WeaponType weaponType = 1;
  if (this->_internal_weapontype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_weapontype(), target);
  }

  // int32 weaponLevel = 2;
  if (this->_internal_weaponlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_weaponlevel(), target);
  }

  // int32 weaponEnhancementLevel = 3;
  if (this->_internal_weaponenhancementlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_weaponenhancementlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WeaponSaveData)
  return target;
}

size_t WeaponSaveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WeaponSaveData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .WeaponType weaponType = 1;
  if (this->_internal_weapontype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_weapontype());
  }

  // int32 weaponLevel = 2;
  if (this->_internal_weaponlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_weaponlevel());
  }

  // int32 weaponEnhancementLevel = 3;
  if (this->_internal_weaponenhancementlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_weaponenhancementlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WeaponSaveData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WeaponSaveData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WeaponSaveData::GetClassData() const { return &_class_data_; }


void WeaponSaveData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WeaponSaveData*>(&to_msg);
  auto& from = static_cast<const WeaponSaveData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WeaponSaveData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_weapontype() != 0) {
    _this->_internal_set_weapontype(from._internal_weapontype());
  }
  if (from._internal_weaponlevel() != 0) {
    _this->_internal_set_weaponlevel(from._internal_weaponlevel());
  }
  if (from._internal_weaponenhancementlevel() != 0) {
    _this->_internal_set_weaponenhancementlevel(from._internal_weaponenhancementlevel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WeaponSaveData::CopyFrom(const WeaponSaveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WeaponSaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeaponSaveData::IsInitialized() const {
  return true;
}

void WeaponSaveData::InternalSwap(WeaponSaveData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WeaponSaveData, _impl_.weaponenhancementlevel_)
      + sizeof(WeaponSaveData::_impl_.weaponenhancementlevel_)
      - PROTOBUF_FIELD_OFFSET(WeaponSaveData, _impl_.weapontype_)>(
          reinterpret_cast<char*>(&_impl_.weapontype_),
          reinterpret_cast<char*>(&other->_impl_.weapontype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WeaponSaveData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[8]);
}

// ===================================================================

class CharacterDataLoadRequest::_Internal {
 public:
};

CharacterDataLoadRequest::CharacterDataLoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CharacterDataLoadRequest)
}
CharacterDataLoadRequest::CharacterDataLoadRequest(const CharacterDataLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CharacterDataLoadRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CharacterDataLoadRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDataLoadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDataLoadRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CharacterDataLoadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[9]);
}

// ===================================================================

class CharacterDataLoadResponse2::_Internal {
 public:
  static const ::CharacterData& characterdata(const CharacterDataLoadResponse2* msg);
};

const ::CharacterData&
CharacterDataLoadResponse2::_Internal::characterdata(const CharacterDataLoadResponse2* msg) {
  return *msg->_impl_.characterdata_;
}
CharacterDataLoadResponse2::CharacterDataLoadResponse2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CharacterDataLoadResponse2)
}
CharacterDataLoadResponse2::CharacterDataLoadResponse2(const CharacterDataLoadResponse2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterDataLoadResponse2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , decltype(_impl_.apireturncode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_characterdata()) {
    _this->_impl_.characterdata_ = new ::CharacterData(*from._impl_.characterdata_);
  }
  _this->_impl_.apireturncode_ = from._impl_.apireturncode_;
  // @@protoc_insertion_point(copy_constructor:CharacterDataLoadResponse2)
}

inline void CharacterDataLoadResponse2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , decltype(_impl_.apireturncode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterDataLoadResponse2::~CharacterDataLoadResponse2() {
  // @@protoc_insertion_point(destructor:CharacterDataLoadResponse2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterDataLoadResponse2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.characterdata_;
}

void CharacterDataLoadResponse2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterDataLoadResponse2::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacterDataLoadResponse2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.characterdata_ != nullptr) {
    delete _impl_.characterdata_;
  }
  _impl_.characterdata_ = nullptr;
  _impl_.apireturncode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDataLoadResponse2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ApiReturnCode apiReturnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_apireturncode(static_cast<::ApiReturnCode>(val));
        } else
          goto handle_unusual;
        continue;
      // .CharacterData characterData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterDataLoadResponse2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CharacterDataLoadResponse2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_apireturncode(), target);
  }

  // .CharacterData characterData = 2;
  if (this->_internal_has_characterdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::characterdata(this),
        _Internal::characterdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacterDataLoadResponse2)
  return target;
}

size_t CharacterDataLoadResponse2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacterDataLoadResponse2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CharacterData characterData = 2;
  if (this->_internal_has_characterdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.characterdata_);
  }

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_apireturncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDataLoadResponse2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterDataLoadResponse2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDataLoadResponse2::GetClassData() const { return &_class_data_; }


void CharacterDataLoadResponse2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterDataLoadResponse2*>(&to_msg);
  auto& from = static_cast<const CharacterDataLoadResponse2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CharacterDataLoadResponse2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_characterdata()) {
    _this->_internal_mutable_characterdata()->::CharacterData::MergeFrom(
        from._internal_characterdata());
  }
  if (from._internal_apireturncode() != 0) {
    _this->_internal_set_apireturncode(from._internal_apireturncode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDataLoadResponse2::CopyFrom(const CharacterDataLoadResponse2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacterDataLoadResponse2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDataLoadResponse2::IsInitialized() const {
  return true;
}

void CharacterDataLoadResponse2::InternalSwap(CharacterDataLoadResponse2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterDataLoadResponse2, _impl_.apireturncode_)
      + sizeof(CharacterDataLoadResponse2::_impl_.apireturncode_)
      - PROTOBUF_FIELD_OFFSET(CharacterDataLoadResponse2, _impl_.characterdata_)>(
          reinterpret_cast<char*>(&_impl_.characterdata_),
          reinterpret_cast<char*>(&other->_impl_.characterdata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDataLoadResponse2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[10]);
}

// ===================================================================

class CharacterDataLoadResponse::_Internal {
 public:
  static const ::CharacterData& characterdata(const CharacterDataLoadResponse* msg);
};

const ::CharacterData&
CharacterDataLoadResponse::_Internal::characterdata(const CharacterDataLoadResponse* msg) {
  return *msg->_impl_.characterdata_;
}
CharacterDataLoadResponse::CharacterDataLoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CharacterDataLoadResponse)
}
CharacterDataLoadResponse::CharacterDataLoadResponse(const CharacterDataLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterDataLoadResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_characterdata()) {
    _this->_impl_.characterdata_ = new ::CharacterData(*from._impl_.characterdata_);
  }
  // @@protoc_insertion_point(copy_constructor:CharacterDataLoadResponse)
}

inline void CharacterDataLoadResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterDataLoadResponse::~CharacterDataLoadResponse() {
  // @@protoc_insertion_point(destructor:CharacterDataLoadResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterDataLoadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.characterdata_;
}

void CharacterDataLoadResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterDataLoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacterDataLoadResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.characterdata_ != nullptr) {
    delete _impl_.characterdata_;
  }
  _impl_.characterdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDataLoadResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CharacterData characterData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterDataLoadResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CharacterDataLoadResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacterData characterData = 1;
  if (this->_internal_has_characterdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::characterdata(this),
        _Internal::characterdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacterDataLoadResponse)
  return target;
}

size_t CharacterDataLoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacterDataLoadResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CharacterData characterData = 1;
  if (this->_internal_has_characterdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.characterdata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDataLoadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterDataLoadResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDataLoadResponse::GetClassData() const { return &_class_data_; }


void CharacterDataLoadResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterDataLoadResponse*>(&to_msg);
  auto& from = static_cast<const CharacterDataLoadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CharacterDataLoadResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_characterdata()) {
    _this->_internal_mutable_characterdata()->::CharacterData::MergeFrom(
        from._internal_characterdata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDataLoadResponse::CopyFrom(const CharacterDataLoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacterDataLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDataLoadResponse::IsInitialized() const {
  return true;
}

void CharacterDataLoadResponse::InternalSwap(CharacterDataLoadResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.characterdata_, other->_impl_.characterdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDataLoadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[11]);
}

// ===================================================================

class CharacterDataSaveRequest::_Internal {
 public:
  static const ::CharacterData& characterdata(const CharacterDataSaveRequest* msg);
};

const ::CharacterData&
CharacterDataSaveRequest::_Internal::characterdata(const CharacterDataSaveRequest* msg) {
  return *msg->_impl_.characterdata_;
}
CharacterDataSaveRequest::CharacterDataSaveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CharacterDataSaveRequest)
}
CharacterDataSaveRequest::CharacterDataSaveRequest(const CharacterDataSaveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterDataSaveRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_characterdata()) {
    _this->_impl_.characterdata_ = new ::CharacterData(*from._impl_.characterdata_);
  }
  // @@protoc_insertion_point(copy_constructor:CharacterDataSaveRequest)
}

inline void CharacterDataSaveRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.characterdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterDataSaveRequest::~CharacterDataSaveRequest() {
  // @@protoc_insertion_point(destructor:CharacterDataSaveRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterDataSaveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.characterdata_;
}

void CharacterDataSaveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterDataSaveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacterDataSaveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.characterdata_ != nullptr) {
    delete _impl_.characterdata_;
  }
  _impl_.characterdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDataSaveRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CharacterData characterData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_characterdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterDataSaveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CharacterDataSaveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacterData characterData = 1;
  if (this->_internal_has_characterdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::characterdata(this),
        _Internal::characterdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacterDataSaveRequest)
  return target;
}

size_t CharacterDataSaveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacterDataSaveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CharacterData characterData = 1;
  if (this->_internal_has_characterdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.characterdata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDataSaveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterDataSaveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDataSaveRequest::GetClassData() const { return &_class_data_; }


void CharacterDataSaveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterDataSaveRequest*>(&to_msg);
  auto& from = static_cast<const CharacterDataSaveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CharacterDataSaveRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_characterdata()) {
    _this->_internal_mutable_characterdata()->::CharacterData::MergeFrom(
        from._internal_characterdata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDataSaveRequest::CopyFrom(const CharacterDataSaveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacterDataSaveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDataSaveRequest::IsInitialized() const {
  return true;
}

void CharacterDataSaveRequest::InternalSwap(CharacterDataSaveRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.characterdata_, other->_impl_.characterdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDataSaveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[12]);
}

// ===================================================================

class CharacterDataSaveResponse::_Internal {
 public:
};

CharacterDataSaveResponse::CharacterDataSaveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CharacterDataSaveResponse)
}
CharacterDataSaveResponse::CharacterDataSaveResponse(const CharacterDataSaveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CharacterDataSaveResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CharacterDataSaveResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDataSaveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDataSaveResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CharacterDataSaveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[13]);
}

// ===================================================================

class LogoutRequest::_Internal {
 public:
};

LogoutRequest::LogoutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LogoutRequest)
}
LogoutRequest::LogoutRequest(const LogoutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogoutRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    _this->_impl_.sessionid_.Set(from._internal_sessionid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LogoutRequest)
}

inline void LogoutRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogoutRequest::~LogoutRequest() {
  // @@protoc_insertion_point(destructor:LogoutRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogoutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessionid_.Destroy();
}

void LogoutRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LogoutRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogoutRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "LogoutRequest.sessionId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogoutRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogoutRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LogoutRequest.sessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogoutRequest)
  return target;
}

size_t LogoutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogoutRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogoutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogoutRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogoutRequest::GetClassData() const { return &_class_data_; }


void LogoutRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogoutRequest*>(&to_msg);
  auto& from = static_cast<const LogoutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LogoutRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogoutRequest::CopyFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRequest::IsInitialized() const {
  return true;
}

void LogoutRequest::InternalSwap(LogoutRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sessionid_, lhs_arena,
      &other->_impl_.sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LogoutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[14]);
}

// ===================================================================

class LogoutResponse::_Internal {
 public:
};

LogoutResponse::LogoutResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LogoutResponse)
}
LogoutResponse::LogoutResponse(const LogoutResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogoutResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.apireturncode_ = from._impl_.apireturncode_;
  // @@protoc_insertion_point(copy_constructor:LogoutResponse)
}

inline void LogoutResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LogoutResponse::~LogoutResponse() {
  // @@protoc_insertion_point(destructor:LogoutResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogoutResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LogoutResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:LogoutResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apireturncode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogoutResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ApiReturnCode apiReturnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_apireturncode(static_cast<::ApiReturnCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogoutResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogoutResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_apireturncode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogoutResponse)
  return target;
}

size_t LogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogoutResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_apireturncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogoutResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogoutResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogoutResponse::GetClassData() const { return &_class_data_; }


void LogoutResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogoutResponse*>(&to_msg);
  auto& from = static_cast<const LogoutResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LogoutResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apireturncode() != 0) {
    _this->_internal_set_apireturncode(from._internal_apireturncode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogoutResponse::CopyFrom(const LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResponse::IsInitialized() const {
  return true;
}

void LogoutResponse::InternalSwap(LogoutResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.apireturncode_, other->_impl_.apireturncode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogoutResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[15]);
}

// ===================================================================

class RefreshSessionRequest::_Internal {
 public:
};

RefreshSessionRequest::RefreshSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RefreshSessionRequest)
}
RefreshSessionRequest::RefreshSessionRequest(const RefreshSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshSessionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    _this->_impl_.sessionid_.Set(from._internal_sessionid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:RefreshSessionRequest)
}

inline void RefreshSessionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessionid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RefreshSessionRequest::~RefreshSessionRequest() {
  // @@protoc_insertion_point(destructor:RefreshSessionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessionid_.Destroy();
}

void RefreshSessionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RefreshSessionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshSessionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "RefreshSessionRequest.sessionId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshSessionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RefreshSessionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RefreshSessionRequest.sessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RefreshSessionRequest)
  return target;
}

size_t RefreshSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RefreshSessionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionId = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSessionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshSessionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSessionRequest::GetClassData() const { return &_class_data_; }


void RefreshSessionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshSessionRequest*>(&to_msg);
  auto& from = static_cast<const RefreshSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RefreshSessionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshSessionRequest::CopyFrom(const RefreshSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RefreshSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshSessionRequest::IsInitialized() const {
  return true;
}

void RefreshSessionRequest::InternalSwap(RefreshSessionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sessionid_, lhs_arena,
      &other->_impl_.sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshSessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[16]);
}

// ===================================================================

class RefreshSessionResponse::_Internal {
 public:
};

RefreshSessionResponse::RefreshSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RefreshSessionResponse)
}
RefreshSessionResponse::RefreshSessionResponse(const RefreshSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.apireturncode_ = from._impl_.apireturncode_;
  // @@protoc_insertion_point(copy_constructor:RefreshSessionResponse)
}

inline void RefreshSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apireturncode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshSessionResponse::~RefreshSessionResponse() {
  // @@protoc_insertion_point(destructor:RefreshSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefreshSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RefreshSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apireturncode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ApiReturnCode apiReturnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_apireturncode(static_cast<::ApiReturnCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RefreshSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_apireturncode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RefreshSessionResponse)
  return target;
}

size_t RefreshSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RefreshSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ApiReturnCode apiReturnCode = 1;
  if (this->_internal_apireturncode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_apireturncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSessionResponse::GetClassData() const { return &_class_data_; }


void RefreshSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshSessionResponse*>(&to_msg);
  auto& from = static_cast<const RefreshSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RefreshSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apireturncode() != 0) {
    _this->_internal_set_apireturncode(from._internal_apireturncode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshSessionResponse::CopyFrom(const RefreshSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RefreshSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshSessionResponse::IsInitialized() const {
  return true;
}

void RefreshSessionResponse::InternalSwap(RefreshSessionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.apireturncode_, other->_impl_.apireturncode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[17]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::BaseRequest*
Arena::CreateMaybeMessage< ::BaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::BaseResponse*
Arena::CreateMaybeMessage< ::BaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginRequest*
Arena::CreateMaybeMessage< ::LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginResponse2*
Arena::CreateMaybeMessage< ::LoginResponse2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginResponse2 >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginResponse*
Arena::CreateMaybeMessage< ::LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CreateAccountRequest*
Arena::CreateMaybeMessage< ::CreateAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CreateAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CreateAccountResponse*
Arena::CreateMaybeMessage< ::CreateAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CreateAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterData*
Arena::CreateMaybeMessage< ::CharacterData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterData >(arena);
}
template<> PROTOBUF_NOINLINE ::WeaponSaveData*
Arena::CreateMaybeMessage< ::WeaponSaveData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WeaponSaveData >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterDataLoadRequest*
Arena::CreateMaybeMessage< ::CharacterDataLoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterDataLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterDataLoadResponse2*
Arena::CreateMaybeMessage< ::CharacterDataLoadResponse2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterDataLoadResponse2 >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterDataLoadResponse*
Arena::CreateMaybeMessage< ::CharacterDataLoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterDataLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterDataSaveRequest*
Arena::CreateMaybeMessage< ::CharacterDataSaveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterDataSaveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CharacterDataSaveResponse*
Arena::CreateMaybeMessage< ::CharacterDataSaveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharacterDataSaveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::LogoutRequest*
Arena::CreateMaybeMessage< ::LogoutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LogoutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::LogoutResponse*
Arena::CreateMaybeMessage< ::LogoutResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LogoutResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::RefreshSessionRequest*
Arena::CreateMaybeMessage< ::RefreshSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RefreshSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::RefreshSessionResponse*
Arena::CreateMaybeMessage< ::RefreshSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RefreshSessionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
